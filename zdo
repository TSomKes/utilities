#! /usr/bin/python3

import argparse
from datetime import date
from os import listdir, path
import re


PATH = path.expanduser('~/Dropbox/zdo')
PATH_PROJECTS = PATH + '/projects'


def CreateProject(name):
    '''Create file under projects/, if not already present'''
    filename = name.lower().replace(' ', '_') + '.txt'
    filepath = path.join(PATH_PROJECTS, filename)
    if not path.isfile(filepath):
        addedDateStr = "\tAdded " + str(date.today())
        with open(filepath, 'w') as f:
            f.write(name + '\n')
            f.write('=' * len(name) + '\n\n')
            f.write(addedDateStr)


def GetProjectFiles():
    files = [path.join(PATH_PROJECTS, f) for f in listdir(PATH_PROJECTS) if
             path.isfile(path.join(PATH_PROJECTS, f))]
    return files


def GetActiveProjectFiles():
    files = ["misc.txt"]
    files.extend(GetProjectFiles())
    return files


def FindLines(fileContents, firstCharacter):
    title = ""
    lines = ""

    title = fileContents.readline()

    for line in fileContents:
        r = re.search('^' + firstCharacter, line)
        if r:
            lines += line

    if lines != "":
        return title + lines


def GetNextActions(filename):
    na = None
    with open(filename) as f:
        na = FindLines(f, '>')

    return na


def GetNextActionsList():
    nal = ""
    for f in GetActiveProjectFiles():
        na = GetNextActions(f)
        if na:
            nal += na + '\n'

    return nal


def GetWaitingFor(filename):
    wf = None
    with open(filename) as f:
        wf = FindLines(f, '<')

    return wf


def GetWaitingForList():
    wfl = ""

    for f in GetActiveProjectFiles():
        wf = GetWaitingFor(f)
        if wf:
            wfl += wf + '\n'

    return wfl


def ListProjects():
    projectFiles = sorted(GetActiveProjectFiles())

    for pf in projectFiles:
        with open(pf) as f:
            output = ""
            title = f.readline().strip()
            if title != 'Misc':
                if FindLines(f, '>'):
                    output += '>'
                else:
                    output += ' '

                f.seek(0)           # HACK!
                if FindLines(f, '<'):
                    output += '<'
                else:
                    output += ' '

                output += ' '
                output += title
                print(output)


parser = argparse.ArgumentParser()
parser.add_argument('action', choices=['na', 'wf', 'pa', 'lp', 'uw'])
parser.add_argument('title', nargs="*")
args = parser.parse_args()

if args.action == 'na':
    print(GetNextActionsList())

elif args.action == 'wf':
    print(GetWaitingForList())

elif args.action == 'pa':
    title = ' '.join(args.title)
    CreateProject(title)

elif args.action == 'lp':
    ListProjects()

elif args.action == 'uw':
    with open('_week.txt', 'w') as f:
        f.write(GetNextActionsList())
        f.write('-----\n\n')
        f.write(GetWaitingForList())
